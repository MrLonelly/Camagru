#!/usr/bin/env node
const server = require('../server');

let port = process.env.PORT | 3000;

server.listen(port);

server.on('error', errorHandler);
server.on('listening', listeningHandler);

function pipeOrPort(address) {
  return typeof address === 'string' ? `pipe ${address}`: `port ${address.port}`;
}

function errorHandler(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = pipeOrPort(server.address());

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} required elevate privileges`);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} already in use`);
      break;
    default:
      throw error;
  }
}

function listeningHandler() {
  const bind = pipeOrPort(server.address());
  console.log(`Listening on ${bind}`);
}
