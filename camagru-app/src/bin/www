#!/usr/bin/env node
const http = require('http');
const { app } = require('../app');

const port = process.env.NODE_DOCKER_PORT || 8080;

const server = http.createServer(app);

server.listen(port);

function pipeOrPort(address) {
	return typeof address === 'string' ? `pipe ${address}` : `port ${address.port}`;
}

function listeningHandler() {
	const bind = pipeOrPort(server.address());
	console.log(`Listening on ${bind}`);
}

function errorHandler(error) {
	if (error.syscall !== 'listen') {
		throw error;
	}

	const bind = pipeOrPort(server.address());

	switch (error.code) {
		case 'EACCES':
			console.error(`${bind} required elevate privileges`);
			break;
		case 'EADDRINUSE':
			console.error(`${bind} already in use`);
			break;
		default:
			throw error;
	}
}

server.on('error', errorHandler);
server.on('listening', listeningHandler);
